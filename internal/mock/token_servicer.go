// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/djurica-surla/golang-exercise/internal/transport/http (interfaces: TokenServicer)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	model "github.com/djurica-surla/golang-exercise/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockTokenServicer is a mock of TokenServicer interface.
type MockTokenServicer struct {
	ctrl     *gomock.Controller
	recorder *MockTokenServicerMockRecorder
}

// MockTokenServicerMockRecorder is the mock recorder for MockTokenServicer.
type MockTokenServicerMockRecorder struct {
	mock *MockTokenServicer
}

// NewMockTokenServicer creates a new mock instance.
func NewMockTokenServicer(ctrl *gomock.Controller) *MockTokenServicer {
	mock := &MockTokenServicer{ctrl: ctrl}
	mock.recorder = &MockTokenServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenServicer) EXPECT() *MockTokenServicerMockRecorder {
	return m.recorder
}

// CreateAccessToken mocks base method.
func (m *MockTokenServicer) CreateAccessToken(arg0 model.Login) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccessToken", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccessToken indicates an expected call of CreateAccessToken.
func (mr *MockTokenServicerMockRecorder) CreateAccessToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccessToken", reflect.TypeOf((*MockTokenServicer)(nil).CreateAccessToken), arg0)
}

// VerifyAccessToken mocks base method.
func (m *MockTokenServicer) VerifyAccessToken(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyAccessToken", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyAccessToken indicates an expected call of VerifyAccessToken.
func (mr *MockTokenServicerMockRecorder) VerifyAccessToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyAccessToken", reflect.TypeOf((*MockTokenServicer)(nil).VerifyAccessToken), arg0)
}
